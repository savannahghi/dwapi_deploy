---
- name: Update packages
  apt: update_cache=yes
  become: yes
  tags: ["common", "maintenance", "dependencies"]

- name: Set localtime to Africa/Nairobi
  file: state=link src=/usr/share/zoneinfo/Africa/Nairobi dest=/etc/localtime
  become: yes

- name: Add Caddy server and MySQL APTs
  template: src={{item.src}} dest={{item.dest}} force=yes
  become: yes
  loop:
    - {src: caddy-fury.list, dest: /etc/apt/sources.list.d/caddy-fury.list}
    # - {src: mysql.list, dest: /etc/apt/sources.list.d/mysql.list}
  tags: ["common", "maintenance", "caddy", "mysql"]

- name: Update packages
  apt: update_cache=yes
  become: yes
  tags: ["common", "maintenance", "caddy", "mysql"]

- name: Install and compile common dependencies
  apt: name={{ item }} state=latest
  become: yes
  loop:
    - ca-certificates
    - apt-transport-https
    - curl
    - caddy
    - software-properties-common
    - gnupg-agent
    - htop
    - ntp
    - libpq-dev
    - libssl-dev
    - python-pymysql-doc
    - python-setuptools
    - python3-dev
    - python3-pip
    - python3-pymysql
    - python3-setuptools
    - python3-mysqldb
    - openssh-server
    - python-ipaddress
    - sshpass
    - tmux
    - unzip
    - vim
    - expect
  tags: ["common", "maintenance", "dependencies"]


- name: Uninstall old versions of docker if present
  apt: name={{ item }} state=absent
  become: yes
  loop:
    - containerd
    - docker
    - docker-engine
    - docker.io
    - runc
  tags: ["common", "maintenance", "dependencies", "docker"]

- name: Setup docker repository
  shell: "{{ item }}"
  become: yes
  loop:
    - "curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -"
    - "echo deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null"
  tags: ["common", "maintenance", "dependencies", "docker"]

- name: Update packages (to pickup the docker repo)
  apt: update_cache=yes
  become: yes
  tags: ["common", "maintenance", "dependencies", "docker"]

- name: Install docker engine
  apt: name={{ item }} state=latest
  become: yes
  loop:
    - containerd.io
    - docker-ce
    - docker-ce-cli
  tags: ["common", "maintenance", "dependencies", "docker"]

- name: Add shared deploy group
  ansible.builtin.group: name={{user_group}} state=present
  become: yes
  tags: ["common", "maintenance", "deploy"]

- name: Add the deploy user and root user to the deploy group
  ansible.builtin.user: name={{item}} groups={{user_group}} append=yes
  become: yes
  loop:
      - root
      - "{{ server_user }}"
  tags: ["common", "maintenance", "deploy"]

